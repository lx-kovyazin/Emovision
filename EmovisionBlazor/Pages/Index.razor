@page "/"
@using EmovisionBlazor.Components
@using EmovisionBlazor.Components.Video
@using EmovisionBlazor.Domain
@using EmovisionBlazor.Domain.Video
@using Newtonsoft.Json;

@inject IJSRuntime Js

<PageTitle>@Title</PageTitle>

<div class="container">
	<div class="row">
		<div class="col">
			@switch (_state)
			{
				case EmovisionState.Stopped:
					<span>Начните работу.</span>
					break;

				case EmovisionState.SelectingSource:
					<SourceSelector SourceSelected="OnSourceSelected" />
					break;

				case EmovisionState.Started:
					<SourcePreview Source="_source" />
					break;
			}
		</div>
	</div>
	<div class="row">
		<div class="col">
			<EmovisionButton State="_state" ClickAsync="OnClick"/>
		</div>
	</div>

@*			@if (_state is EmovisionState.Started)
			{
				<SourceSelector OnSelectedSource="OnSelectedSource" />
				<FileUploader Dir="@_fileDir" OnUploaded="OnUploaded" />
				<SourcePreview Source="_source" />
			}
			<EmovisionButton State="_state" ClickAsync="OnClick"/>*@
</div>
				@*<CameraSelector CameraSelected="CameraSelected"/>*@
				@*<SourcePreview/>*@
@code {
	const string Title = "Emovision";
	bool IsStarted = false;

	private EmovisionState _state = EmovisionState.Stopped;

	private Source? _source = null;

	private void SwitchState() => _state = _state switch
	{
		EmovisionState.Stopped => EmovisionState.SelectingSource,
		EmovisionState.SelectingSource => EmovisionState.SourceSelected,
		EmovisionState.SourceSelected => EmovisionState.Started,
		EmovisionState.Started => EmovisionState.Stopped,
		_ => throw new Exception("Unexpected state!")
	};

	public async Task OnClick()
	{
		if (_state is EmovisionState.Started)
		{
			await _source.StopAsync();
			_source.Reset();
		}
		SwitchState();
	}

	protected override void OnInitialized()
	{
		base.OnInitialized();
	}

	private async Task OnSourceSelected(Source source)
	{
		Console.WriteLine($"{nameof(OnSourceSelected)}: {source}");
		_source = source;
		_state = EmovisionState.SourceSelected;
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
		}
		if (_state is EmovisionState.SourceSelected)
		{
			await _source.StartAsync();
			SwitchState();
		}
	}


	//   private void CameraSelected(Camera camera)
	//   {
	//	Console.WriteLine($"A selected camera: {camera.DeviceInfo.Name}.");
		//}
}